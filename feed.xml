<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Anderson Aguiar</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://www.andersonaguiar.com.br/feed.xml" />
<link rel="alternate" type="text/html" href="http://www.andersonaguiar.com.br" />
<updated>2015-01-26T12:18:01-02:00</updated>
<id>http://www.andersonaguiar.com.br/</id>
<author>
  <name>Anderson Aguiar</name>
  <uri>http://www.andersonaguiar.com.br/</uri>
  <email>andersonaguiar.web@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Utilizando React como view do Backbone]]></title>
 <link rel="alternate" type="text/html" href="http://www.andersonaguiar.com.br/utilizando-react-como-view-do-backbone/" />
  <id>http://www.andersonaguiar.com.br/utilizando-react-como-view-do-backbone</id>
  <updated>2014-08-26T00:00:00-00:00</updated>
  <published>2015-01-26T00:00:00-02:00</published>
  
  <author>
    <name>Anderson Aguiar</name>
    <uri>http://www.andersonaguiar.com.br</uri>
    <email>andersonaguiar.web@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Meu primeiro post do ano irá mostrar como juntar duas tecnologias sensacionais que por consequência “bombaram” 
no ano de 2014. Será um post direto ao ponto(é recomendado saber o básico de ambos, pois não entrarei em detalhes), 
o Backbone traz consigo a camada de view, e a implementa de maneira funcional. O objetivo do post é mostrar a possibilidade de 
substituir essa view pelo React. Focarei na parte prática, mostrarei um projeto exemplo, que mostra como trabalhar com ambos 
e integrá-los em sua aplicação.&lt;/p&gt;

&lt;p&gt;Então vamos lá, para contextualizar uma breve introdução sobre as duas tecnologias:&lt;/p&gt;

&lt;h2 id=&quot;backbone&quot;&gt;Backbone&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Backbone.js gives structure to web applications by providing models with key-value binding and custom events, collections with 
a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing API over a 
RESTful JSON interface. &lt;br /&gt;
Fonte: &lt;a href=&quot;http://backbonejs.org/&quot;&gt;http://backbonejs.org/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Como você já deva saber, basicamente, Backbone é uma lib que traz o Javascript de forma bem definida(Models, Views, 
Collections, Routers, Events…), te dando formas bem declarativas para criar uma aplicação padronizada e totalmente conectada, 
de quebra, ainda serve tudo isso em uma API RESTFul.&lt;/p&gt;

&lt;h2 id=&quot;react&quot;&gt;React&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;A Javascript library for building user interfaces &lt;br /&gt;
Fonte: &lt;a href=&quot;http://facebook.github.io/react/&quot;&gt;http://facebook.github.io/react/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Como a própria descrição já diz, &lt;strong&gt;UI&lt;/strong&gt;. Ou seja, pensou em React, logo remeta a camada de visualização, ponto. 
Por ser responsável “apenas” pela parte da View, o React é extremamente espetacular no contexto em que ele age, 
digo isso pois ele trata:&lt;/p&gt;

&lt;h3 id=&quot;virtual-dom--diff&quot;&gt;Virtual DOM + Diff&lt;/h3&gt;

&lt;p&gt;A VDOM(Virtual DOM) que pode ser estudada a fundo em &lt;a href=&quot;https://github.com/Matt-Esch/virtual-dom&quot;&gt;virtual-dom&lt;/a&gt;, dentro do React 
é trabalhada da seguinte forma:&lt;/p&gt;

&lt;p&gt;A partir da criação da cadeia de componentes do React é inicializado a VDOM, tendo isso, o React mantém duas VDOMs, a VDOM antiga e a 
nova VDOM. O diff acontece quando é modificado algum state mapeado dentro da cadeia de componentes, a VDOM antiga será comparada 
com a que houve modificação de estado(a nova VDOM), será verificado onde ocorreu a diferença, e inserido na árvore DOM de fato.&lt;/p&gt;

&lt;h3 id=&quot;componentizao&quot;&gt;Componentização&lt;/h3&gt;

&lt;p&gt;Tudo no React é trabalhado através de componentes, isso é muito bom, pois temos reutilização dos mesmos. Similar ao conceito 
de Web Components.&lt;/p&gt;

&lt;h3 id=&quot;reativo&quot;&gt;Reativo&lt;/h3&gt;

&lt;p&gt;Age em decorrência de modificações de estados de seus componentes. Alterou estado, o render é invocado.&lt;/p&gt;

&lt;h2 id=&quot;porque-eu-devo-utilizar-react-como-view-do-backbone-se-o-mesmo-j-possui-sua-prpria-camada-de-view&quot;&gt;Porque eu devo utilizar React como view do Backbone se o mesmo já possui sua própria camada de View?&lt;/h2&gt;

&lt;p&gt;Perfeito. Essa é a pergunta chave para saber se é viável ou não integrar React à sua aplicação Backbone. 
Para responder a essa pergunta você deve se fazer outras duas perguntas: &lt;/p&gt;

&lt;h4 id=&quot;minha-aplicao-precisar-manipular-a-dom-com-muita-frequncia&quot;&gt;“Minha aplicação precisará manipular a DOM com muita frequência?”&lt;/h4&gt;

&lt;h4 id=&quot;eu-quero-componentizar-meus-elementos-sem-ter-que-ficar-criando-templates-pra-tudo&quot;&gt;“Eu quero componentizar meus elementos sem ter que ficar criando templates pra tudo?”&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://www.andersonaguiar.com.br/images/react+backbone/gosteinaogostei.gif&quot; alt=&quot;Smithsonian Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Se as duas respostas forem não, então você só deve continuar a ler esse post para fins de conhecimento, 
pois a View do Backbone já atende muito bem sua necessidade, seja ela feita com o default &lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore&lt;/a&gt;, ou qualquer outro template. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Mas se a resposta for sim… meu amigo… React “vai cair que é uma luva”. Com seu render “inteligente” ele irá sempre fazer o diff do que 
foi modificado antes de tocar na DOM, ou seja, se você está mudando o texto de um span frequentemente, ele NÃO irá recriar todo o elemento na DOM, 
irá apenas criar uma nova VDOM e ver se tem diferença da VDOM antiga, nesse caso foi apenas o conteúdo interno da tag, então o render irá agir apenas nele.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quais os ganhos?&lt;/strong&gt; &lt;em&gt;Performance e componentização.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;projeto-exemplo&quot;&gt;Projeto exemplo&lt;/h2&gt;

&lt;p&gt;Criei um repositório de exemplo no Github, onde o mesmo foi clonado a partir do 
Car List do &lt;a href=&quot;https://github.com/sergiors/car-list&quot;&gt;Sérgio Siqueira&lt;/a&gt;. Modifiquei para o cenário 
de pesquisa básica dos veículos, para que possa ser pesquisado os veículos pela placa e pelo modelo. Os eventos acontecem 
pelo onKeyUp nos inputs de pesquisa. Vamos partir para a parte explicativa…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Para iniciar, podemos clonar o projeto&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//github.com/andersonaguiar/backbone-react-example.git&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Instalar os vendors definidos no bower.json&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;bower&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It’s done.&lt;/p&gt;

&lt;h2 id=&quot;explanao-do-cdigo&quot;&gt;Explanação do código&lt;/h2&gt;

&lt;p&gt;Irei pontuar onde o React estará agindo e de que forma(todos os títulos abaixo serão links para o code no Github).&lt;/p&gt;

&lt;p&gt;Para aplicar o React, a primeira coisa a se fazer em um projeto com Backbone é apagar o diretório de views, pois 
quem fará esse papel será o React. &lt;/p&gt;

&lt;h3 id=&quot;appjshttpsgithubcomandersonaguiarbackbone-react-exampleblobmasterappassetsjsappjs&quot;&gt;&lt;a href=&quot;https://github.com/andersonaguiar/backbone-react-example/blob/master/app/assets/js/app.js&quot;&gt;app.js&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Esté é o nosso arquivo de inicialização, é nele que está sendo definido o Router e os renders dos componentes do React. &lt;/p&gt;

&lt;h3 id=&quot;routerjshttpsgithubcomandersonaguiarbackbone-react-exampleblobmasterappassetsjsrouterjs&quot;&gt;&lt;a href=&quot;https://github.com/andersonaguiar/backbone-react-example/blob/master/app/assets/js/router.js&quot;&gt;router.js&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Aqui é puro Backbone, está sendo definido apenas as rotas que a aplicação vier a ter, no nosso exemplo não existe 
nenhuma rota, apenas o initialize para trazer nossa lista de carros assim que a página for carregada.&lt;/p&gt;

&lt;h3 id=&quot;e-como-a-aplicao-saber-quando-dever-renderizar&quot;&gt;E como a aplicação saberá quando deverá renderizar?&lt;/h3&gt;

&lt;p&gt;No nosso projeto a delegação, o disparo e a observação de eventos, acontecerá em dois arquivos: filter e cars.&lt;/p&gt;

&lt;h4 id=&quot;filterjshttpsgithubcomandersonaguiarbackbone-react-exampleblobmasterappassetsjscomponentsfilterjs&quot;&gt;&lt;a href=&quot;https://github.com/andersonaguiar/backbone-react-example/blob/master/app/assets/js/components/filter.js&quot;&gt;filter.js&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Esse será o nosso arquivo que conterá o componente do topo, o formulário de filtro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Delegação dos eventos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Os eventos estão atribuídos em dois lugares: no &lt;a href=&quot;https://github.com/andersonaguiar/backbone-react-example/blob/master/app/assets/js/components/filter.js#L45&quot;&gt;Formulário(que pelo efeito de bubbling atingirá os inputs)&lt;/a&gt; e no 
&lt;a href=&quot;https://github.com/andersonaguiar/backbone-react-example/blob/master/app/assets/js/components/filter.js#L55&quot;&gt;Botão Filtrar&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disparo de eventos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sempre que a ação de filtrar for acionada, a mesma chamará o método &lt;em&gt;_filter&lt;/em&gt;, que por sua vez irá disparar ao Backbone o evento 
customizado &lt;a href=&quot;https://github.com/andersonaguiar/backbone-react-example/blob/master/app/assets/js/components/filter.js#L38&quot;&gt;filter:cars&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;carsjshttpsgithubcomandersonaguiarbackbone-react-exampleblobmasterappassetsjscomponentscarsjs&quot;&gt;&lt;a href=&quot;https://github.com/andersonaguiar/backbone-react-example/blob/master/app/assets/js/components/cars.js&quot;&gt;cars.js&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Esse será o arquivo que terá o componente cars(como lista) e o car(como elemento individual).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Observação de eventos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E para finalizar o ciclo, a observação de eventos ocorrerá no componente &lt;a href=&quot;https://github.com/andersonaguiar/backbone-react-example/blob/master/app/assets/js/components/cars.js#L48-L51&quot;&gt;Cars&lt;/a&gt; 
assim que o mesmo já estiver “montado”, sempre que o evento customizado de filtro for disparado, será modificado o state, pela atualização 
da collection de cars de acordo com os filtros passados através do form.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Palavras finais&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nesse exemplo a listagem de carros ficou reativa a mudança de estado de filter. Conseguimos combinar o poder das duas tecnologias. 
Criamos nossos componentes, não tocamos na DOM sem necessidade, e aproveitamos o cartel de soluções do Backbone(eventos, routes, etc).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Agradecimentos&lt;/em&gt;: &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Além dos materiais encontrados na internet, da aplicação de ambas as tecnologias em projetos pessoais e profissionais na 
&lt;a href=&quot;http://www.div64.com&quot;&gt;DIV64&lt;/a&gt;, das participações nos encontros da nossa maravilhosa comunidade &lt;a href=&quot;https://www.facebook.com/groups/floripajs/&quot;&gt;FloripaJS&lt;/a&gt;, 
a qual está munida de grandes profissionais, gente com sede de conhecimento e de compartilhamento, e também de amigos.&lt;br /&gt;&lt;br /&gt;
Dois caras eu preciso destacar, eles contribuíram bastante para o meu aprendizado, são eles: 
&lt;a href=&quot;http://www.zigolis.com.br/blog/&quot;&gt;Gabriel Zigolis&lt;/a&gt; e &lt;a href=&quot;http://sergiorsiqueira.com/&quot;&gt;Sérgio Siqueira&lt;/a&gt;,
gente assim faz a diferença na comunidade, agir sem estrelismo e compartilhar a essência do que somos e do que nos fazem cada vez mais profissionais.&lt;br /&gt;&lt;br /&gt; 
&lt;strong&gt;O conhecimento.&lt;/strong&gt; &lt;br /&gt;&lt;br /&gt; &lt;/p&gt;

&lt;p&gt;E aí, curtiu? Comente o que achou da junção dessas duas tecnologias ;)&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://www.andersonaguiar.com.br/utilizando-react-como-view-do-backbone/&quot;&gt;Utilizando React como view do Backbone&lt;/a&gt; was originally published by Anderson Aguiar at &lt;a href=&quot;http://www.andersonaguiar.com.br&quot;&gt;Anderson Aguiar&lt;/a&gt; on January 26, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Plugins Sublime Text]]></title>
 <link rel="alternate" type="text/html" href="http://www.andersonaguiar.com.br/plugins-sublimetext/" />
  <id>http://www.andersonaguiar.com.br/plugins-sublimetext</id>
  <updated>2014-09-13T00:00:00-00:00</updated>
  <published>2014-09-12T00:00:00-03:00</published>
  
  <author>
    <name>Anderson Aguiar</name>
    <uri>http://www.andersonaguiar.com.br</uri>
    <email>andersonaguiar.web@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Faxina…&lt;/p&gt;

&lt;p&gt;Essa semana estava organizando vários documentos no Dropbox e me assustei com a relação de plugins que eu havia instalado no meu Sublime Text 3(eram mais de 40 :O), então resolvi fazer uma LIMPA e compartilhar minha lista de “sobreviventes” aqui no site com vocês. &lt;/p&gt;

&lt;p&gt;Com certeza boa parte dos plugins que irei apresentar aqui a maioria de vocês já conhecem, mas um ou outro é possível que dê para pescar, então vai lá:&lt;/p&gt;

&lt;h2 id=&quot;lista&quot;&gt;Lista&lt;/h2&gt;

&lt;h3 id=&quot;emmethttpssublimewbondnetpackagesemmet&quot;&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Emmet&quot;&gt;#Emmet&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Claro… o velho e bom Emmet ex Zen Coding. Como abandoná-lo?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.andersonaguiar.com.br/images/plugins-sublime/emmet.gif&quot; alt=&quot;Emmet&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;wakatimehttpssublimewbondnetpackageswakatime&quot;&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/WakaTime&quot;&gt;#WakaTime&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Esse é muito legal, ele observa o tempo que você fica no Sublime e gera relatórios de horas, linguagens 
que você utiliza, entre outros. O site do plugin é &lt;a href=&quot;https://wakatime.com/&quot;&gt;WakaTime.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.andersonaguiar.com.br/images/plugins-sublime/wakatime.gif&quot; alt=&quot;WakaTime&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sidebarenhancementshttpssublimewbondnetpackagessidebarenhancements&quot;&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/SideBarEnhancements&quot;&gt;#Side​Bar​Enhancements&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Esse cara dá uma tunada nas opções do clique direito do mouse em cima dos arquivos e diretórios, 
listando uma série ações úteis!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.andersonaguiar.com.br/images/plugins-sublime/side​bar​enhancements.gif&quot; alt=&quot;Side​Bar​Enhancements&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;csscombhttpssublimewbondnetpackagescsscomb&quot;&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/CSScomb&quot;&gt;#CSSComb&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Quem não tem o hábito de organizar seu CSS, ou que trabalha em equipe, esse plugin é ótimo para 
ter uma padrão de código onde a forma que você entregará é a mesma que você irá receber o código.&lt;/p&gt;

&lt;p&gt;A configuração padrão dele é a exibida na imagem, mas é configurável.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.andersonaguiar.com.br/images/plugins-sublime/csscomb.gif&quot; alt=&quot;CSSComb&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;color-highlighterhttpssublimewbondnetpackagescolor20highlighter&quot;&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Color%20Highlighter&quot;&gt;#Color Highlighter&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Pra quem quer ter uma base de qual melhor cor pra colocar na página, basta clicar em cima do valor
declarado :D&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.andersonaguiar.com.br/images/plugins-sublime/colorhighlighter.gif&quot; alt=&quot;Color Highlighter&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dracula-themehttpssublimewbondnetpackagesdracula20color20scheme&quot;&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Dracula%20Color%20Scheme&quot;&gt;#Dracula Theme&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Por enquanto estou utilizando o tema do Dracula, achei bacana a combinação das cores.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.andersonaguiar.com.br/images/plugins-sublime/draculatheme.png&quot; alt=&quot;Dracula Theme&quot; /&gt;&lt;/p&gt;

&lt;p&gt;*Estarei atualizando esse post sempre que achar que cabe algum outro plugin aqui.&lt;/p&gt;

&lt;p&gt;Minha lista completa de plugins pode ser obtida nesse link: 
&lt;a href=&quot;https://github.com/andersonaguiar/plugins-sublime-text&quot;&gt;https://github.com/andersonaguiar/plugins-sublime-text&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;desafio&quot;&gt;Desafio&lt;/h2&gt;

&lt;p&gt;Agora é modinha esse negócio de desafios, eu nunca havia feito isso, mas então pra entrar um pouco 
na onda dessa frescurada, mas em um contexto de desenvolvimento.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.andersonaguiar.com.br/images/plugins-sublime/desafio.gif&quot; alt=&quot;Dracula Theme&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Então eu lanço o desafio de postar &lt;strong&gt;quais 
plugins utilizados no sublime&lt;/strong&gt;, aos amigos: &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://diogo.nu/&quot;&gt;Diogo Moretti&lt;/a&gt;, 
&lt;a href=&quot;http://www.zigolis.com.br/&quot;&gt;Gabriel Zigolis&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/pssdn&quot;&gt;Bruno Possidonio&lt;/a&gt;,
&lt;a href=&quot;http://www.felipefialho.com/&quot;&gt;Felipe Fialho&lt;/a&gt;, &lt;a href=&quot;http://da2k.com.br/&quot;&gt;Fernando Daciuk&lt;/a&gt;, 
&lt;a href=&quot;http://pedronauck.com/&quot;&gt;Pedro Nauck&lt;/a&gt; e &lt;a href=&quot;http://eduardomatos.me/&quot;&gt;Eduardo Mattos&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Obs.: Pode ser um post no site ou um comentário aqui embaixo com o link do seu 
Package Controll.sublime-settings :)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Recomendo a todos fazerem essa “limpa”, pois vários dos plugins que instalamos é que achamos 
úteis a primeiro momento mas depois cai em desuso e fica fazendo lixo.&lt;/p&gt;
&lt;/blockquote&gt;


  &lt;p&gt;&lt;a href=&quot;http://www.andersonaguiar.com.br/plugins-sublimetext/&quot;&gt;Plugins Sublime Text&lt;/a&gt; was originally published by Anderson Aguiar at &lt;a href=&quot;http://www.andersonaguiar.com.br&quot;&gt;Anderson Aguiar&lt;/a&gt; on September 12, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[BrazilJS - 2014]]></title>
 <link rel="alternate" type="text/html" href="http://www.andersonaguiar.com.br/braziljs-2014/" />
  <id>http://www.andersonaguiar.com.br/braziljs-2014</id>
  <updated>2014-08-23T00:00:00-00:00</updated>
  <published>2014-08-23T00:00:00-03:00</published>
  
  <author>
    <name>Anderson Aguiar</name>
    <uri>http://www.andersonaguiar.com.br</uri>
    <email>andersonaguiar.web@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Finalmente tirei um tempo para mudar a cara do meu site e de quebra já aproveitei para “transformá-lo” no meu blog pessoal.&lt;/p&gt;

&lt;p&gt;Pois bem, esse será o primeiro post do blog e também a primeira vez que participo desse grande evento que é o BrazilJS, o objetivo desse post é fazer um compilado breve do que aconteceu no evento, as talks, as experiências que tive, as pessoas que conheci e o meu feedback.&lt;/p&gt;

&lt;h2 id=&quot;a-viagem&quot;&gt;A viagem&lt;/h2&gt;

&lt;p&gt;A ida até o evento foi meio torturante pois fomos de carro, saímos de Florianópolis o Bruno Possidonio e eu, paramos em Garopaba para dar carona ao &lt;a href=&quot;https://twitter.com/pedronauck&quot;&gt;Pedro Nauck&lt;/a&gt; e fomos até Porto Alegre, o horário de saída foi em torno de 14:15 de quarta-feira e chegamos por volta de 20:30, ou seja, foi uma viagem de mais ou menos 6 horas de chão. Na volta o início foi um pouco tenso, pois havia muita neblina na estrada mas depois da metade ela se dissipou fazendo com que o restante da viagem fosse bem tranquila, o Pedro ficou para o encontro da Mozilla, chegamos em Florianópolis 01:40, levamos 5 horas.&lt;/p&gt;

&lt;h2 id=&quot;encontro-zofe&quot;&gt;Encontro ZOFE&lt;/h2&gt;

&lt;p&gt;Depois de descarregar as coisas no hotel e nos ajeitar, fomos direto ao encontro do &lt;a href=&quot;http://zofe.com.br/&quot;&gt;ZOFE&lt;/a&gt; que aconteceu no Bilhar Porto Dez. O encontro com o pessoal foi muito legal, deu pra rir bastante e fazer um ótimo networking regado de muita conversa, sinuca e bebida(que não pode faltar). Galera muito bacana, alguns eu já havia tido contato pela internet mas nunca pessoalmente, e outros conheci no networking que o evento propiciou, alguns dos feras são: &lt;a href=&quot;https://twitter.com/zigolis&quot;&gt;Gabriel Zigolis&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/VictorFranca&quot;&gt;Victor Ferraz&lt;/a&gt;, Thiago Ferreira, David Alberto(o gringo companheiro de trabalho do &lt;a href=&quot;https://twitter.com/diogomoretti_&quot;&gt;Diogo&lt;/a&gt;), &lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;Guillermo Rauch&lt;/a&gt; criador do SocketIO(e Argentino), &lt;a href=&quot;https://twitter.com/atilafassina&quot;&gt;Átila Fassina&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/eduardojmatos&quot;&gt;Eduardo Matos&lt;/a&gt; e vários outros que conheci no bar que não me lembro o nome, pois estava alterado devido às cervas tomadas que a &lt;a href=&quot;http://sendgrid.com/&quot;&gt;SendGrid&lt;/a&gt; pagou para o pessoal inscrito :P&lt;/p&gt;

&lt;h2 id=&quot;o-evento&quot;&gt;O evento&lt;/h2&gt;

&lt;p&gt;O evento foi bom demais! Ótima estrutura, site, vários brindes, oportunidades de emprego, grandes patrocinadores, só galera fera, cobertura, comunicação e algumas ótimas palestras. &lt;/p&gt;

&lt;p&gt;A escolha do local do evento foi fantástica, não compareci na primeira edição mas sei que foi no mesmo lugar então o local está aprovadíssimo. A organização do evento está de parabéns, tudo muito bem pensado &lt;a href=&quot;https://twitter.com/jaydson&quot;&gt;Jaydson&lt;/a&gt; e &lt;a href=&quot;https://twitter.com/felipenmoura&quot;&gt;Felipe Nascimento&lt;/a&gt; detonaram!&lt;/p&gt;

&lt;h3 id=&quot;palestras&quot;&gt;Palestras&lt;/h3&gt;

&lt;p&gt;As palestras na grande maioria foram fantásticas! Vou falar de algumas que realmente eu curti demais.&lt;/p&gt;

&lt;p&gt;Data-binding [R]evolution com o &lt;a href=&quot;https://twitter.com/leobalter&quot;&gt;Léo Balter&lt;/a&gt; que falou sobre várias coisas legais e também sobre ES6/ES7, onde o item marcante foi o Object.observe e o exemplo de player utilizando o Object.observe com fallback para proxies. &lt;/p&gt;

&lt;p&gt;Single page apps com o &lt;a href=&quot;https://twitter.com/eduardolundgren&quot;&gt;Eduardo Lundgren&lt;/a&gt;, onde foi anunciado o &lt;a href=&quot;https://github.com/eduardolundgren/senna&quot;&gt;SENNA&lt;/a&gt; ferramenta incrível para criar esse tipo de aplicação de forma rápida, onde a requisição será apenas o conteúdo que precisa ser carregado nas surfaces definidas, tendo Bookmarkability e SEO, History Navigation, UI feedback e outras features. &lt;/p&gt;

&lt;p&gt;O &lt;a href=&quot;https://twitter.com/renatomangini&quot;&gt;Renato Mangini&lt;/a&gt; falou sobre os Service Workers onde o mesmo é implementado via JavaScript na primeira vez que o usuário acessa a página, a partir daí ele roda em background, muito foda!&lt;/p&gt;

&lt;p&gt;AST, CST e Ferramentas Incríveis com o &lt;a href=&quot;https://twitter.com/millermedeiros&quot;&gt;Miller Medeiros&lt;/a&gt; que dispensa comentários, o cara é foda! Explicou como os parsers funcionam, mostrou o parser mais utilizado em JavaScript, o &lt;a href=&quot;http://esprima.org/&quot;&gt;Esprima&lt;/a&gt;, apresentou seu projeto &lt;a href=&quot;https://github.com/millermedeiros/esformatter&quot;&gt;esformatter&lt;/a&gt; que traz um pouco a ideia de deixar o padrão de código também em um arquivo de configuração, fazendo com que o resultado do código seja o mesmo para todos da equipe. E pra finalizar apresentou o &lt;a href=&quot;https://github.com/millermedeiros/nodefy&quot;&gt;NodeFy&lt;/a&gt; para conversão de padrão de módulos AMD para o esperado pelo Node.js.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/bitbonsai&quot;&gt;Mauricio Wolff&lt;/a&gt; com a palestra Limpando CSS gigantes com JS mostrou o &lt;a href=&quot;https://github.com/bitbonsai/cssi&quot;&gt;cssi: CSS Selector Scene Investigation&lt;/a&gt; uma ferramenta poderosa escrita em Node.js onde o mesmo utiliza no Booking.com para remover seletores repetidos e/ou não utilizados e mostra os commits que colocaram os seletores e qual sua data de modificação, além de mostrar um relatório com informações relevantes de antes e depois da “limpeza”.&lt;/p&gt;

&lt;p&gt;Making 3D Graphics Accessible com o &lt;a href=&quot;https://twitter.com/mrdoob&quot;&gt;Ricardo Cabello (Mr. Doob)&lt;/a&gt; o criador do &lt;a href=&quot;http://threejs.org/&quot;&gt;Three.js&lt;/a&gt;, definitivamente essa fez a galera pirar! Ele mostrou como simplificar a forma de escrever aplicações em 3D, o poder que o HTML5 + JS nos dá e também que poucos imaginariam ver esse tipo de animação sendo feita no navegador sem a utilização de flash. A palestra foi muito rica de exemplos :)&lt;/p&gt;

&lt;p&gt;The 7 Principles of rich web applications com o &lt;a href=&quot;https://twitter.com/rauchg&quot;&gt;Guillermo Rauch&lt;/a&gt;, nessa palestra foi focado fortemente em UX, feedbacks e ótimas práticas para criar aplicações ricas. Demonstrou seu grande conhecimento na camada que a maioria dos fronts desconhece, rede.&lt;/p&gt;

&lt;p&gt;Mais detalhes das palestras podem ser encontradas no site do Jean Carlo, onde o mesmo fez um excelente live posting:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Primeiro dia: &lt;a href=&quot;http://jcemer.com/brazil-js-2014-primeiro-dia.html&quot;&gt;http://jcemer.com/brazil-js-2014-primeiro-dia.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Segundo dia: &lt;a href=&quot;http://jcemer.com/brazil-js-2014-segundo-dia.html&quot;&gt;http://jcemer.com/brazil-js-2014-segundo-dia.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;observaes&quot;&gt;Observações&lt;/h3&gt;

&lt;p&gt;O evento em si valeu muito a pena mas não posso deixar também de expressar as partes que não gostei do evento, até porque é com base em feedbacks que esses eventos crescem mais e mais. Então vamos lá:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Senti falta de mais conteúdo técnico(voltado para JavaScript, já que é sobre isso que o nome do evento trata), ocorreu palestras que não tinham nada a ver com JavaScript, não teve muita abordagem de Node.js(um assunto que está tão forte hoje em dia).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Achei que algumas palestram fugiram do escopo e até houve repetição de assuntos falados por outros palestrantes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Não basta somente trazer pessoal de fora bom, eles precisam saber externalizar o que sabem, enquanto alguns falavam, a grande maioria dava de ver que não estavam gostando, é claro que é impossível agradar a todos, mas quando a maioria não gosta algo de errado tem.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Algumas palestras pareciam terem sido feitas um dia antes do evento, enquanto a grande maioria se dedicou criando uma apresentação foda, outros não transpareceram isso. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Resumindo: Tirando esses detalhes, o evento foi FOOOOODAAAA!! 2015 estarei presente de novo com certeza!&lt;/p&gt;

&lt;h3 id=&quot;links-das-talks-estarei-atualizando-aqui&quot;&gt;Links das talks (estarei atualizando aqui)&lt;/h3&gt;

&lt;h4 id=&quot;quinta-feira-21082014&quot;&gt;Quinta-feira, 21/08/2014&lt;/h4&gt;

&lt;p&gt;RENATO MANGINI - Why ServiceWorker may be the next big thing:  &lt;/p&gt;

&lt;p&gt;CHRIS MILLER - Frontend at Scale - The Tumblr Story  &lt;/p&gt;

&lt;p&gt;NICK DESAULNIERS - Intro to GFX: Raw WebGL&lt;br /&gt;
&lt;a href=&quot;http://nickdesaulniers.github.io/RawWebGL/#/&quot;&gt;http://nickdesaulniers.github.io/RawWebGL/#/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JÖRN ZAEFFERER - Effective jQuery
&lt;a href=&quot;http://jzaefferer.github.io/effective-jquery/#1&quot;&gt;http://jzaefferer.github.io/effective-jquery/#1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CHRIS MILLS - Web versus native: round 1?&lt;br /&gt;
&lt;a href=&quot;http://www.slideshare.net/chrisdavidmills/web-versus-native-round-1&quot;&gt;http://www.slideshare.net/chrisdavidmills/web-versus-native-round-1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MAURICIO WOLFF - Limpando CSS gigantes com JS
&lt;a href=&quot;https://speakerdeck.com/bitbonsai/braziljs-2014-talk&quot;&gt;https://speakerdeck.com/bitbonsai/braziljs-2014-talk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;EDUARDO LUNDGREN - Single Page Applications Done Right&lt;br /&gt;
&lt;a href=&quot;https://speakerdeck.com/eduardolundgren/single-page-applications-done-right&quot;&gt;https://speakerdeck.com/eduardolundgren/single-page-applications-done-right&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GUILLERMO RAUCH - undefinned  &lt;/p&gt;

&lt;h4 id=&quot;sexta-feira-22082014&quot;&gt;Sexta-feira, 22/08/2014&lt;/h4&gt;

&lt;p&gt;JACOB PAGE - From commit to prod in 5 minutes
&lt;a href=&quot;https://docs.google.com/presentation/d/1S_VJO1ReIyRduN9S6PoWlv4kTvCX2FbC-5EaPleLQVk/pub?start=false&amp;amp;loop=false&amp;amp;delayms=10000#slide=id.p&quot;&gt;https://docs.google.com/presentation/d/1S_VJO1ReIyRduN9S6PoWlv4kTvCX2FbC-5EaPleLQVk/pub?start=false&amp;amp;loop=false&amp;amp;delayms=10000#slide=id.p&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RICARDO TOMASI - Frontend was always my favorite color
&lt;a href=&quot;https://speakerdeck.com/ricardobeat/frontend-was-always-my-favorite-color&quot;&gt;https://speakerdeck.com/ricardobeat/frontend-was-always-my-favorite-color&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JONATHAN SAMPSON - Mastering IE’s updated F12 tools
&lt;a href=&quot;http://presentboldly.com/jonathansampson/mastering-f12-in-internet-explorer&quot;&gt;http://presentboldly.com/jonathansampson/mastering-f12-in-internet-explorer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ROB DODSON - The Web Component Ecosystem
&lt;a href=&quot;https://speakerdeck.com/robdodson/the-web-component-ecosystem&quot;&gt;https://speakerdeck.com/robdodson/the-web-component-ecosystem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LEONARDO BALTER - Data-binding [R]evolution 
&lt;a href=&quot;http://leobalter.github.io/data-binding-slides/output/#1&quot;&gt;http://leobalter.github.io/data-binding-slides/output/#1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MILLER MEDEIROS - AST, CST e Ferramentas Incríveis&lt;br /&gt;
&lt;a href=&quot;http://slides.millermedeiros.com/braziljs/ast/#/&quot;&gt;http://slides.millermedeiros.com/braziljs/ast/#/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;YEHUDA KATZ - A Day in the Life of an Ember Developer&lt;/p&gt;

&lt;p&gt;RICARDO CABELLO (MR. DOOB) - Making 3D Graphics Accesible&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://www.andersonaguiar.com.br/braziljs-2014/&quot;&gt;BrazilJS - 2014&lt;/a&gt; was originally published by Anderson Aguiar at &lt;a href=&quot;http://www.andersonaguiar.com.br&quot;&gt;Anderson Aguiar&lt;/a&gt; on August 23, 2014.&lt;/p&gt;</content>
</entry>

</feed>
